<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
		 version="4.0">
	<!-- 配置SpringMVC中负责处理请求的核心Servlet，也被称为SpringMVC的前端控制器 -->
<!--	<servlet>-->
<!--		<servlet-name>DispatcherServlet</servlet-name>-->
<!--		&lt;!&ndash; DispatcherServlet的全类名 &ndash;&gt;-->
<!--		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
<!--		&lt;!&ndash; 通过初始化参数指定SpringMVC配置文件位置 &ndash;&gt;-->
<!--		<init-param>-->
<!--			&lt;!&ndash; 如果不记得contextConfigLocation配置项的名称，可以到DispatcherServlet的父类FrameworkServlet中查找 &ndash;&gt;-->
<!--			<param-name>contextConfigLocation</param-name>-->
<!--			&lt;!&ndash; 使用classpath:说明这个路径从类路径的根目录开始才查找 &ndash;&gt;-->
<!--			<param-value>classpath:spring-mvc.xml</param-value>-->
<!--		</init-param>-->
<!--		&lt;!&ndash; 作为框架的核心组件，在启动过程中有大量的初始化操作要做，这些操作放在第一次请求时才执行非常不恰当 &ndash;&gt;-->
<!--		&lt;!&ndash; 我们应该将DispatcherServlet设置为随Web应用一起启动 &ndash;&gt;-->
<!--		<load-on-startup>1</load-on-startup>-->

<!--	</servlet>-->

<!--	<servlet-mapping>-->
<!--		<servlet-name>DispatcherServlet</servlet-name>-->
<!--		&lt;!&ndash; 对DispatcherServlet来说，url-pattern有两种方式配置 &ndash;&gt;-->
<!--		&lt;!&ndash; 方式一：配置“/”，表示匹配整个Web应用范围内所有请求。这里有一个硬性规定：不能写成“/*”。-->
<!--          只有这一个地方有这个特殊要求，以后我们再配置Filter还是可以正常写“/*”。 &ndash;&gt;-->
<!--		&lt;!&ndash; 方式二：配置“*.扩展名”，表示匹配整个Web应用范围内部分请求 &ndash;&gt;-->
<!--		<url-pattern>/</url-pattern>-->
<!--	</servlet-mapping>-->

</web-app>